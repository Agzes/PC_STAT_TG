import sys
import psutil
import pynvml
import os
import subprocess
import time
import platform
from datetime import datetime
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler
from datapcstatbot import TOKENtg,  authorized_ids, Appdata
pc_stat_bot_VER = "BETA 1.0"
class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'
print(f"""{bcolors.OKGREEN}
      
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ï¶‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë
‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë
‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ï¶‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë
‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë  
      """)
print(f"""{bcolors.OKGREEN}{bcolors.BOLD}  ô è ·¥Ä…¢·¥¢·¥ás """)
print(" ")
print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} –ó–∞–ø—É—Å–∫–∞—é—Å—å! ")

pynvml.nvmlInit()
device_count = pynvml.nvmlDeviceGetCount()

def off_bot():
    sys.exit()
def off(update, context):
    user_id = update.effective_user.id
    if user_id in authorized_ids:
        confirm_message = "üî¥–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –í–´–ö–õ–Æ–ß–ò–¢–¨ –±–æ—Ç–∞?\n" \
                        "üî¥–í–≤–µ–¥–∏—Ç–µ '/confirm_off' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        context.bot.send_message(chat_id=update.effective_chat.id, text=confirm_message)
    else:
        print(f"{bcolors.WARNING}W:{bcolors.WARNING} {user_id} –≤–≤—ë–ª –∫–æ–º–∞–Ω–¥—É /off. ")
        context.bot.send_message(chat_id=update.effective_chat.id, text="‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–Å–ù.")
        print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} –ó–∞–ø—Ä–µ—Ç–∏–ª –¥–æ—Å—Ç—É–ø: {user_id}.")
def confirm_off(update, context):
    user_id = update.effective_user.id
    if user_id in authorized_ids:
        if update.message.text.lower() == "/confirm_off":
            context.bot.send_message(chat_id=update.effective_chat.id, text="–í—ã–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞...")
            context.bot.send_message(chat_id=update.effective_chat.id, text="–ë–æ—Ç –±—É–¥–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã.")
            time.sleep(2.5)
            context.bot.send_message(chat_id=update.effective_chat.id, text="–ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω.")
            # –ó–¥–µ—Å—å –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –∫–æ–¥ –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É—è —Ñ—É–Ω–∫—Ü–∏—é restart_bot()
            off_bot()
    else:
        print(f"{bcolors.WARNING}W:{bcolors.WARNING} {user_id} –≤–≤—ë–ª –∫–æ–º–∞–Ω–¥—É /confirm_off. ")
        print(f"{bcolors.WARNING}W:{bcolors.WARNING} –°—Ç–æ–∏—Ç –æ–±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è –∫—Ç–æ-—Ç–æ –Ω–∞—à—ë–ª –≤–∞—à–µ–≥–æ –±–æ—Ç–∞! ")
        print(f"{bcolors.WARNING}W:{bcolors.WARNING} –ö—Ç–æ-—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–æ—Å–ø–∞–º–∏—Ç—å –∫–æ–º–∞–Ω–¥–∞–º–∏ –±–æ—Ç–∞ –∏ –±–æ—Ç –º–æ–∂–µ—Ç –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è!!! ")
        context.bot.send_message(chat_id=update.effective_chat.id, text="‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–Å–ù.")
        print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} –ó–∞–ø—Ä–µ—Ç–∏–ª –¥–æ—Å—Ç—É–ø: {user_id}.")
    

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
def start(update, context):
    user_id = update.effective_user.id
    if user_id in authorized_ids:
        context.bot.send_message(chat_id=update.effective_chat.id, text="üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! \n‚ÑπÔ∏è–Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã.\n\n üîì–ù–∞—à—ë–ª —Ç–µ–±—è –≤ –±–∞–∑–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã—Ö: –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω!")
    else:
        print(f"{bcolors.WARNING}W:{bcolors.WARNING} {user_id} –≤–≤—ë–ª –∫–æ–º–∞–Ω–¥—É /start. ")
        context.bot.send_message(chat_id=update.effective_chat.id, text="üëã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! \n‚ÑπÔ∏è–Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã.\n\n üîí–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –∞–≤—Ç–æ—Ä–µ–∑–∏—Ä—É–π—Ç–µ—Å—å.")
        print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} –ñ–¥—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {user_id}.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /info
def info(update, context):
    user_id = update.effective_user.id
    if user_id in authorized_ids:
        print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} {user_id} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /info –æ–Ω –µ—Å—Ç—å –≤ –±–∞–∑–µ –∞–≤—Ç–æ—Ä–µ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞—á–∏–Ω–∞—é —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö.")
        chat_id = update.effective_chat.id
        context.bot.send_message(chat_id=update.effective_chat.id, text="‚úÖ–í—ã  –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.‚úÖ \nüÜó–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω.üÜó \nüî•–ù–∞—á–∏–Ω–∞—é —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö.üî• ")
        message = context.bot.send_message(chat_id=update.effective_chat.id, text="üî•–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö: 0% ")
        msg = message.message_id
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
        current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        new_text = f"üî•–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö: 5%"
        context.bot.edit_message_text(
            chat_id=chat_id,
            message_id=message.message_id,
            text=new_text
        )
        os_info = platform.system()
        operating_system_version = platform.release()
        new_text = f"üî•–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö: 10%"
        context.bot.edit_message_text(
            chat_id=chat_id,
            message_id=message.message_id,
            text=new_text
        )
        cpu_percent = psutil.cpu_percent()
        sred_oczagruz = psutil.cpu_freq()
        new_text = f"üî•–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö: 20%"
        context.bot.edit_message_text(
            chat_id=chat_id,
            message_id=message.message_id,
            text=new_text
        )
        new_text = f"üî•–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö: 30%"
        context.bot.edit_message_text(
            chat_id=chat_id,
            message_id=message.message_id,
            text=new_text
        )
        memory = psutil.virtual_memory()
        memory_usage = memory.used / (1024 ** 3)
        total_memory = memory.total / (1024 ** 3)
        for i in range(device_count):
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
            handle = pynvml.nvmlDeviceGetHandleByIndex(i)
            gpu_info = pynvml.nvmlDeviceGetUtilizationRates(handle)

            # –ó–∞–≥—Ä—É–∑–∫–∞ GPU –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
            gpu_load = gpu_info.gpu

            

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        message = f"‚è≤Ô∏è –í—Ä–µ–º—è: {current_time}\n"
        message = f"üî∑ –í–µ—Ä—Å–∏—è –±–æ—Ç–∞: {pc_stat_bot_VER}\n"
        new_text = f"üî•–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö: 50%"
        context.bot.edit_message_text(
            chat_id=chat_id,
            message_id=msg,
            text=new_text
        )
        message += f"üñ•Ô∏è –û–°: {os_info}\n"
        message += f"üñ•Ô∏è –û–° –≤–µ—Ä—Å–∏—è: {operating_system_version}\n"
        new_text = f"üî•–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö: 60%"
        context.bot.edit_message_text(
            chat_id=chat_id,
            message_id=msg,
            text=new_text
        )
        message += f"üî¥ –¶–ü: {cpu_percent}%\n"
        new_text = f"üî•–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö: 70%"
        context.bot.edit_message_text(
            chat_id=chat_id,
            message_id=msg,
            text=new_text
        )
        new_text = f"üî•–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö: 80%"
        context.bot.edit_message_text(
            chat_id=chat_id,
            message_id=msg,
            text=new_text
        )
        message += f"üü¢ –ì–ü: {gpu_load}%\n"
        new_text = f"üî•–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö: 95%"
        context.bot.edit_message_text(
            chat_id=chat_id,
            message_id=msg,
            text=new_text
        )
        message += f"üîµ –ü–∞–º—è—Ç—å: {memory_usage:.2f} GB / {total_memory:.2f} GB\n"
        message += f"‚ö™ –ß–∞—Å—Ç–æ—Ç–∞ –¶–ü: {sred_oczagruz}%\n"

        new_text = f"‚úÖ–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö: 100%‚úÖ"
        context.bot.edit_message_text(
            chat_id=chat_id,
            message_id=msg,
            text=new_text
        )
        print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} ( —Å–µ—Å—Å–∏—è {user_id} ) –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–æ–Ω—á–µ–Ω –≤—ã—Å—ã–ª–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç.")
        context.bot.send_message(chat_id=update.effective_chat.id, text=message)
    else:
        print(f"{bcolors.WARNING}W:{bcolors.WARNING} {user_id} –≤–≤—ë–ª –∫–æ–º–∞–Ω–¥—É /info. ")
        context.bot.send_message(chat_id=update.effective_chat.id, text="‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–Å–ù.")
        print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} –ó–∞–ø—Ä–µ—Ç–∏–ª –¥–æ—Å—Ç—É–ø: {user_id}.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /uptime
def uptime(update, context):
    user_id = update.effective_user.id
    if user_id in authorized_ids:
        context.bot.send_message(chat_id=update.effective_chat.id, text="‚úÖ–í—ã  –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.‚úÖ \nüÜó–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω.üÜó \nüî•–ù–∞—á–∏–Ω–∞—é —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö.üî• ")
        # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
        uptime = datetime.now() - start_time

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        message = f"–ë–æ—Ç –≤ –æ–Ω–ª–∞–π–Ω–µ {uptime}"
        context.bot.send_message(chat_id=update.effective_chat.id, text=message)
    else:
        print(f"{bcolors.WARNING}W:{bcolors.WARNING} {user_id} –≤–≤—ë–ª –∫–æ–º–∞–Ω–¥—É /uptime . ")
        context.bot.send_message(chat_id=update.effective_chat.id, text="‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–Å–ù.")
        print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} –ó–∞–ø—Ä–µ—Ç–∏–ª –¥–æ—Å—Ç—É–ø: {user_id}.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
def unknown(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text="üòî–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def launch_app(update, context):
    user_id = update.effective_user.id
    if user_id in authorized_ids:
            print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} {user_id} –ø–æ–¥–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.")
            context.bot.send_message(chat_id=update.effective_chat.id, text="‚úÖ–í—ã  –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.‚úÖ \nüÜó–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω.üÜó \nüî•–ß—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å?üî• ")
            try:
                # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                subprocess.Popen(Appdata)
                print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ.")
                context.bot.send_message(chat_id=update.effective_chat.id, text="üî•–ó–∞–ø—É—Å—Ç–∏–ªüî• ")
            except Exception as e:
                print(f"{bcolors.WARNING}W:{bcolors.WARNING} –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:", str(e))
                context.bot.send_message(chat_id=update.effective_chat.id, text="‚ùå–û—à–∏–±–∫–∞‚ùå ")
    else:
        print(f"{bcolors.WARNING}W:{bcolors.WARNING} {user_id} –≤–≤—ë–ª –∫–æ–º–∞–Ω–¥—É /launch_app . ")
        context.bot.send_message(chat_id=update.effective_chat.id, text="‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–Å–ù.")
        print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} –ó–∞–ø—Ä–µ—Ç–∏–ª –¥–æ—Å—Ç—É–ø: {user_id}.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def check_auth(username, password):
    with open(os.path.join(os.path.dirname(__file__), "login.txt"), "r") as file:
        for line in file:
            saved_username, saved_password = line.strip().split(":")
            if username == saved_username and password == saved_password:
                return True
    return False

def button_click(update, context):
    query = update.callback_query
    button = query.data
    
    if button == 'off':
        off(update, context)
    elif button == 'info':
        info(update, context)
    elif button == 'fp':
        launch_app(update, context)
    elif button == 'up':
        uptime(update, context)

def menu(update, context):
    user_id = update.effective_user.id
    if user_id in authorized_ids:
        context.bot.send_message(chat_id=update.effective_chat.id, text="üü¶–ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–Ω—éüü¶")
        keyboard = [
            [InlineKeyboardButton("üî¥ –í—ã–∫–ª—é—á–µ–Ω–∏–µ ", callback_data='off')],
            [InlineKeyboardButton("üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ü–ö", callback_data='info')],
            [InlineKeyboardButton("‚èèÔ∏è –ó–∞–ø—É—Å–∫ –ü—Ä–æ–≥—Ä–∞–º–º—ã ", callback_data='fp')],
            [InlineKeyboardButton("üü¢ UPtime bot ", callback_data='up')]
        ]
            

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
        update.message.reply_text('‚èèÔ∏è –º–µ–Ω—é ‚èèÔ∏è', reply_markup=InlineKeyboardMarkup(keyboard))
    else:
        print(f"{bcolors.WARNING}W:{bcolors.WARNING} {user_id} –≤–≤—ë–ª –∫–æ–º–∞–Ω–¥—É /menu –∏–ª–∏ /mm . ")
        context.bot.send_message(chat_id=update.effective_chat.id, text="‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–Å–ù.")
        print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} –ó–∞–ø—Ä–µ—Ç–∏–ª –¥–æ—Å—Ç—É–ø: {user_id}.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /login
def login(update, context):
    user_id = update.effective_user.id
    print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} –ü—Ä–æ–≤–µ—Ä—è—é –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –¥–∞–ª: {user_id}")
    if len(context.args) > 0:
        username = context.args[0]
    else:
        username = "u9fdyudfnu wyt78024tvtnv wte9867vn84672 bt64237nv5682 vb6fw8b wetfw6b6 6w     stdfs8tsyutft sdf dasd"
    if len(context.args) > 1:
        password = context.args[1]
    else:
        password = "utyafsd 7927eft dsioyf72fsd fg4 tdsyfg24867rf gads fg 2g7 gaf 2037rrgfd07usfg 27r2 gq0w7erg 07t27r 0w"
    if check_auth(username, password):
        authorized_ids.append(user_id)  # –î–æ–±–∞–≤–ª—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫
        context.bot.send_message(chat_id=update.effective_chat.id, text="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
        print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} {user_id} —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–ª—Å—è! ")
        keyboard = [
        [InlineKeyboardButton("üî¥ –í—ã–∫–ª—é—á–µ–Ω–∏–µ ", callback_data='off')],
        [InlineKeyboardButton("üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ü–ö", callback_data='info')],
        [InlineKeyboardButton("‚èèÔ∏è –ó–∞–ø—É—Å–∫ –ü—Ä–æ–≥—Ä–∞–º–º—ã ", callback_data='fp')],
        [InlineKeyboardButton("üü¢ UPtime bot ", callback_data='up')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
        update.message.reply_text('üëã–î–æ–±—Ä–æ –ü–æ–∂–∞–ª–æ–≤–∞—Ç—åüëã \n ‚èèÔ∏è–≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ‚èèÔ∏è', reply_markup=reply_markup)

    else:
        print(f"{bcolors.WARNING}W:{bcolors.WARNING} –î–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –¥–∞–ª {user_id} –Ω–µ–≤–µ—Ä–Ω—ã! ")
        context.bot.send_message(chat_id=update.effective_chat.id, text="‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
def echo(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text=update.message.text)
# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
updater = Updater(token=TOKENtg, use_context=True)
dispatcher = updater.dispatcher
dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(CommandHandler("info", info))
dispatcher.add_handler(CommandHandler("menu", menu))
dispatcher.add_handler(CommandHandler("mm", menu))
dispatcher.add_handler(CommandHandler("uptime", uptime))
dispatcher.add_handler(CommandHandler("launch_app", launch_app))
dispatcher.add_handler(CommandHandler("login", login))
dispatcher.add_handler(CommandHandler("off", off))
dispatcher.add_handler(CommandHandler("confirm_off", confirm_off))
dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, echo))
dispatcher.add_handler(MessageHandler(Filters.command, unknown))
dispatcher.add_handler(CallbackQueryHandler(button_click))
print(f"{bcolors.OKGREEN}I:{bcolors.OKCYAN} –ó–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!{bcolors.ENDC}")
# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
updater.start_polling()
start_time = datetime.now()
updater.idle()


